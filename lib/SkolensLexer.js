// Generated from grammars/Skolens.g4 by ANTLR 4.12.0
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,38,254,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,1,0,1,0,1,1,1,1,1,2,1,2,1,3,
1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,
1,12,1,12,1,13,1,13,1,14,1,14,1,14,1,15,1,15,1,15,1,16,1,16,1,17,1,17,1,
17,1,18,1,18,1,19,1,19,1,19,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,22,1,22,
1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,
25,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,
1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,
30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,
1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,3,32,199,8,32,1,33,1,33,1,33,5,33,
204,8,33,10,33,12,33,207,9,33,1,33,1,33,1,34,1,34,1,34,1,35,3,35,215,8,35,
1,35,4,35,218,8,35,11,35,12,35,219,1,35,1,35,4,35,224,8,35,11,35,12,35,225,
3,35,228,8,35,1,36,1,36,5,36,232,8,36,10,36,12,36,235,9,36,1,37,4,37,238,
8,37,11,37,12,37,239,1,37,1,37,1,38,1,38,1,38,1,38,5,38,248,8,38,10,38,12,
38,251,9,38,1,38,1,38,0,0,39,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,
10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,
22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,
34,69,0,71,35,73,36,75,37,77,38,1,0,7,2,0,39,39,92,92,3,0,43,43,45,45,124,
124,1,0,48,57,4,0,65,90,95,95,97,122,128,65535,5,0,48,57,65,90,95,95,97,
122,128,65535,3,0,9,10,12,13,32,32,2,0,10,10,13,13,262,0,1,1,0,0,0,0,3,1,
0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,
1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,
0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,
0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,
49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,
0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,71,1,0,0,0,0,73,
1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,1,79,1,0,0,0,3,81,1,0,0,0,5,83,1,0,0,0,
7,85,1,0,0,0,9,87,1,0,0,0,11,89,1,0,0,0,13,91,1,0,0,0,15,93,1,0,0,0,17,95,
1,0,0,0,19,97,1,0,0,0,21,99,1,0,0,0,23,101,1,0,0,0,25,103,1,0,0,0,27,105,
1,0,0,0,29,107,1,0,0,0,31,110,1,0,0,0,33,113,1,0,0,0,35,115,1,0,0,0,37,118,
1,0,0,0,39,120,1,0,0,0,41,123,1,0,0,0,43,126,1,0,0,0,45,130,1,0,0,0,47,133,
1,0,0,0,49,135,1,0,0,0,51,137,1,0,0,0,53,147,1,0,0,0,55,153,1,0,0,0,57,162,
1,0,0,0,59,169,1,0,0,0,61,175,1,0,0,0,63,178,1,0,0,0,65,198,1,0,0,0,67,200,
1,0,0,0,69,210,1,0,0,0,71,214,1,0,0,0,73,229,1,0,0,0,75,237,1,0,0,0,77,243,
1,0,0,0,79,80,5,61,0,0,80,2,1,0,0,0,81,82,5,59,0,0,82,4,1,0,0,0,83,84,5,
43,0,0,84,6,1,0,0,0,85,86,5,45,0,0,86,8,1,0,0,0,87,88,5,42,0,0,88,10,1,0,
0,0,89,90,5,47,0,0,90,12,1,0,0,0,91,92,5,94,0,0,92,14,1,0,0,0,93,94,5,37,
0,0,94,16,1,0,0,0,95,96,5,40,0,0,96,18,1,0,0,0,97,98,5,41,0,0,98,20,1,0,
0,0,99,100,5,123,0,0,100,22,1,0,0,0,101,102,5,125,0,0,102,24,1,0,0,0,103,
104,5,91,0,0,104,26,1,0,0,0,105,106,5,93,0,0,106,28,1,0,0,0,107,108,5,61,
0,0,108,109,5,61,0,0,109,30,1,0,0,0,110,111,5,33,0,0,111,112,5,61,0,0,112,
32,1,0,0,0,113,114,5,60,0,0,114,34,1,0,0,0,115,116,5,60,0,0,116,117,5,61,
0,0,117,36,1,0,0,0,118,119,5,62,0,0,119,38,1,0,0,0,120,121,5,62,0,0,121,
122,5,61,0,0,122,40,1,0,0,0,123,124,5,117,0,0,124,125,5,110,0,0,125,42,1,
0,0,0,126,127,5,118,0,0,127,128,5,97,0,0,128,129,5,105,0,0,129,44,1,0,0,
0,130,131,5,46,0,0,131,132,5,46,0,0,132,46,1,0,0,0,133,134,5,46,0,0,134,
48,1,0,0,0,135,136,5,44,0,0,136,50,1,0,0,0,137,138,5,112,0,0,138,139,5,105,
0,0,139,140,5,101,0,0,140,141,5,118,0,0,141,142,5,105,0,0,142,143,5,101,
0,0,143,144,5,110,0,0,144,145,5,111,0,0,145,146,5,116,0,0,146,52,1,0,0,0,
147,148,5,100,0,0,148,149,5,122,0,0,149,150,5,275,0,0,150,151,5,115,0,0,
151,152,5,116,0,0,152,54,1,0,0,0,153,154,5,105,0,0,154,155,5,101,0,0,155,
156,5,118,0,0,156,157,5,105,0,0,157,158,5,101,0,0,158,159,5,116,0,0,159,
160,5,111,0,0,160,161,5,116,0,0,161,56,1,0,0,0,162,163,5,103,0,0,163,164,
5,97,0,0,164,165,5,114,0,0,165,166,5,117,0,0,166,167,5,109,0,0,167,168,5,
115,0,0,168,58,1,0,0,0,169,170,5,116,0,0,170,171,5,101,0,0,171,172,5,105,
0,0,172,173,5,107,0,0,173,174,5,116,0,0,174,60,1,0,0,0,175,176,5,106,0,0,
176,177,5,97,0,0,177,62,1,0,0,0,178,179,5,99,0,0,179,180,5,105,0,0,180,181,
5,116,0,0,181,182,5,257,0,0,182,183,5,100,0,0,183,184,5,105,0,0,184,64,1,
0,0,0,185,186,5,112,0,0,186,187,5,97,0,0,187,188,5,116,0,0,188,189,5,105,
0,0,189,190,5,101,0,0,190,191,5,115,0,0,191,199,5,115,0,0,192,193,5,97,0,
0,193,194,5,112,0,0,194,195,5,108,0,0,195,196,5,97,0,0,196,197,5,109,0,0,
197,199,5,115,0,0,198,185,1,0,0,0,198,192,1,0,0,0,199,66,1,0,0,0,200,205,
5,39,0,0,201,204,3,69,34,0,202,204,8,0,0,0,203,201,1,0,0,0,203,202,1,0,0,
0,204,207,1,0,0,0,205,203,1,0,0,0,205,206,1,0,0,0,206,208,1,0,0,0,207,205,
1,0,0,0,208,209,5,39,0,0,209,68,1,0,0,0,210,211,5,92,0,0,211,212,5,39,0,
0,212,70,1,0,0,0,213,215,7,1,0,0,214,213,1,0,0,0,214,215,1,0,0,0,215,217,
1,0,0,0,216,218,7,2,0,0,217,216,1,0,0,0,218,219,1,0,0,0,219,217,1,0,0,0,
219,220,1,0,0,0,220,227,1,0,0,0,221,223,3,47,23,0,222,224,7,2,0,0,223,222,
1,0,0,0,224,225,1,0,0,0,225,223,1,0,0,0,225,226,1,0,0,0,226,228,1,0,0,0,
227,221,1,0,0,0,227,228,1,0,0,0,228,72,1,0,0,0,229,233,7,3,0,0,230,232,7,
4,0,0,231,230,1,0,0,0,232,235,1,0,0,0,233,231,1,0,0,0,233,234,1,0,0,0,234,
74,1,0,0,0,235,233,1,0,0,0,236,238,7,5,0,0,237,236,1,0,0,0,238,239,1,0,0,
0,239,237,1,0,0,0,239,240,1,0,0,0,240,241,1,0,0,0,241,242,6,37,0,0,242,76,
1,0,0,0,243,244,5,47,0,0,244,245,5,47,0,0,245,249,1,0,0,0,246,248,8,6,0,
0,247,246,1,0,0,0,248,251,1,0,0,0,249,247,1,0,0,0,249,250,1,0,0,0,250,252,
1,0,0,0,251,249,1,0,0,0,252,253,6,38,0,0,253,78,1,0,0,0,11,0,198,203,205,
214,219,225,227,233,239,249,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class SkolensLexer extends antlr4.Lexer {

    static grammarFileName = "Skolens.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'='", "';'", "'+'", "'-'", "'*'", "'/'", 
                         "'^'", "'%'", "'('", "')'", "'{'", "'}'", "'['", 
                         "']'", "'=='", "'!='", "'<'", "'<='", "'>'", "'>='", 
                         "'un'", "'vai'", "'..'", "'.'", "','", "'pievienot'", 
                         "'dz\\u0113st'", "'ievietot'", "'garums'", "'teikt'", 
                         "'ja'", "'cit\\u0101di'" ];
	static symbolicNames = [ null, "ASSIGN", "SEMI", "ADD", "SUB", "MUL", "DIV", 
                          "EXP", "MOD", "LPAREN", "RPAREN", "LCURL", "RCURL", 
                          "LBRAC", "RBRAC", "EQ", "NOTEQ", "LESS", "LESSEQ", 
                          "LARG", "LARGEQ", "AND", "OR", "CONCAT", "DOT", 
                          "COMMA", "PIEVIENOT", "DZEST", "IEVIETOT", "GARUMS", 
                          "PRINT", "IF", "ELSE", "BOOL", "STRING", "NUM", 
                          "ID", "WS", "COMMENT" ];
	static ruleNames = [ "ASSIGN", "SEMI", "ADD", "SUB", "MUL", "DIV", "EXP", 
                      "MOD", "LPAREN", "RPAREN", "LCURL", "RCURL", "LBRAC", 
                      "RBRAC", "EQ", "NOTEQ", "LESS", "LESSEQ", "LARG", 
                      "LARGEQ", "AND", "OR", "CONCAT", "DOT", "COMMA", "PIEVIENOT", 
                      "DZEST", "IEVIETOT", "GARUMS", "PRINT", "IF", "ELSE", 
                      "BOOL", "STRING", "ESC", "NUM", "ID", "WS", "COMMENT" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

SkolensLexer.EOF = antlr4.Token.EOF;
SkolensLexer.ASSIGN = 1;
SkolensLexer.SEMI = 2;
SkolensLexer.ADD = 3;
SkolensLexer.SUB = 4;
SkolensLexer.MUL = 5;
SkolensLexer.DIV = 6;
SkolensLexer.EXP = 7;
SkolensLexer.MOD = 8;
SkolensLexer.LPAREN = 9;
SkolensLexer.RPAREN = 10;
SkolensLexer.LCURL = 11;
SkolensLexer.RCURL = 12;
SkolensLexer.LBRAC = 13;
SkolensLexer.RBRAC = 14;
SkolensLexer.EQ = 15;
SkolensLexer.NOTEQ = 16;
SkolensLexer.LESS = 17;
SkolensLexer.LESSEQ = 18;
SkolensLexer.LARG = 19;
SkolensLexer.LARGEQ = 20;
SkolensLexer.AND = 21;
SkolensLexer.OR = 22;
SkolensLexer.CONCAT = 23;
SkolensLexer.DOT = 24;
SkolensLexer.COMMA = 25;
SkolensLexer.PIEVIENOT = 26;
SkolensLexer.DZEST = 27;
SkolensLexer.IEVIETOT = 28;
SkolensLexer.GARUMS = 29;
SkolensLexer.PRINT = 30;
SkolensLexer.IF = 31;
SkolensLexer.ELSE = 32;
SkolensLexer.BOOL = 33;
SkolensLexer.STRING = 34;
SkolensLexer.NUM = 35;
SkolensLexer.ID = 36;
SkolensLexer.WS = 37;
SkolensLexer.COMMENT = 38;



